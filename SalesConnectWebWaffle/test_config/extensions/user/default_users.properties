# To use the getters on a user, the following attribute headers must be used in the csv. getAttribute can be used to get the value for any header.
#uid, getUid;
#password, getPassword;
#email, getEmail;
#first name,getFirstName;
#last name, getLastName;
#language, getLanguage;
#display name, getDisplayName;
#Note that csv strings are not to be inside "". If you need to use the delimiter in a value, you have to choose a different delimiter.

#path to CSV file and file delimiter
user_data_file_path = test_config/extensions/user/users.csv
csv_delimiter = ,
config_delimiter = ;

#standard users settings. Standard users are all the ones left after moving out users to special_user_groups
standard_users.check_out = true
standard_users.timeout = 900000

#special user categories
special_user_groups = db2_users;noMem_users;bus_admin;e2e_AGusers;e2e_APusers;e2e_EUusers;noGBL_Search;cchFnId;nonCchFnId;dach_users;readonly;us_users;mobile;dummy;gbs_Sel;gbs_Mgr;

#settings to identify users that belong to special user categories
#[special_user_group].attribute = The CSV header on which to query by identifier
#[special_user_group].identifiers = Will match all where users with an .attribute value that matches one of your specified identifiers.
#[special_user_group].check_out = true or false - if users of this group will be checked out when fetched and therefore unavailable to other tests until they are checked back in.
#[special_user_group].timeout = The time (in milliseconds) to wait for a user to become available if they are all checked out.
#[special_user_group].ringfence = true or false - if users that are matched for this group should be removed from the standard users group, and therefore also unavailable to any groups loaded subsequently.

#db2 group
db2_users.attribute = groups
db2_users.identifiers = db2_users
db2_users.check_out = true
db2_users.timeout = 900000
db2_users.ringfence = true

#noMem group
noMem_users.attribute = groups
noMem_users.identifiers = noMem_users
noMem_users.check_out = true
noMem_users.timeout = 900000
noMem_users.ringfence = true

#dach group
dach_users.attribute = groups
dach_users.identifiers = dach_users
dach_users.check_out = true
dach_users.timeout = 900000
dach_users.ringfence = true

#us group
us_users.attribute = groups
us_users.identifiers = us_users
us_users.check_out = true
us_users.timeout = 900000
us_users.ringfence = true

#readonly group
readonly.attribute = groups
readonly.identifiers = readonly
readonly.check_out = true
readonly.timeout = 900000
readonly.ringfence = true

#ba group
bus_admin.attribute = groups
bus_admin.identifiers = bus_admin
bus_admin.check_out = true
bus_admin.timeout = 900000
bus_admin.ringfence = true

#e2e AG group
e2e_AGusers.attribute = groups
e2e_AGusers.identifiers = e2e_AGusers
e2e_AGusers.check_out = true
e2e_AGusers.timeout = 900000
e2e_AGusers.ringfence = true

#e2e AP group
e2e_APusers.attribute = groups
e2e_APusers.identifiers = e2e_APusers
e2e_APusers.check_out = true
e2e_APusers.timeout = 900000
e2e_APGusers.ringfence = true

#e2e EU group
e2e_EUusers.attribute = groups
e2e_EUusers.identifiers = e2e_EUusers
e2e_EUusers.check_out = true
e2e_EUusers.timeout = 900000
e2e_EUusers.ringfence = true

#noGBL_Search group
noGBL_Search.attribute = groups
noGBL_Search.identifiers = noGBL_Search
noGBL_Search.check_out = true
noGBL_Search.timeout = 900000
noGBL_Search.ringfence = true

#CCH functional Id group
cchFnId.attribute = groups
cchFnId.identifiers = cchFnId
cchFnId.check_out = true
cchFnId.timeout = 900000
cchFnId.ringfence = true

#Non-CCH functional Id group
nonCchFnId.attribute = groups
nonCchFnId.identifiers = nonCchFnId
nonCchFnId.check_out = true
nonCchFnId.timeout = 900000
nonCchFnId.ringfence = true

#Mobile functional Id group
mobile.attribute = groups
mobile.identifiers = mobile
mobile.check_out = true
mobile.timeout = 900000
mobile.ringfence = true

#dummy group
dummy.attribute = groups
dummy.identifiers = dummy
dummy.check_out = true
dummy.timeout = 900000
dummy.ringfence = true

#Data Optimizer Seller functional Id group
gbs_Sel.attribute = groups
gbs_Sel.identifiers = gbs_Sel
gbs_Sel.check_out = true
gbs_Sel.timeout = 900000
gbs_Sel.ringfence = true

#Data Optimizer Manager functional Id group
gbs_Mgr.attribute = groups
gbs_Mgr.identifiers = gbs_Mgr
gbs_Mgr.check_out = true
gbs_Mgr.timeout = 900000
gbs_Mgr.ringfence = true