<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">

<!-- TEMPLATE VERSION
2012.11.04-2200
-->

<!-- SEE TESTNG.ORG for documentation on using testng xml config files. DTD available at above link and also in testng.jar -->

<suite thread-count="4" name="SmokeTestSuite" parallel="methods" >

  <!--
  GROUPS
  Specifying groups will cause only the tests of that group (that are found in the test classes specified under <test>s below) to be run. 
  Groups may also me specified under <test>.
  -->
  <!--groups>
    <run>
      <include name="Level1" />
    </run>
  </groups-->
 
  <!-- SELENIUM GRID/REMOTE SERVER SETTINGS -->
  <!--Remote server:-->
  <!--parameter name="server_is_grid_hub" value="true" />
  <parameter name="server_host" value="dubxpcvm645.mul.ie.ibm.com" />
  <parameter name="server_port" value="4444" /-->
  
   <!--Uncomment below to run locally-->
  <parameter name="server_is_grid_hub" value="false" />
  <parameter name="server_host" value="localhost" />
  <parameter name="server_port" value="" />
  

  <!-- APPLICATION UNDER TEST HOST SERVER -->
  <parameter name="browser_url" value="https://svt4sugarlb01a.rtp.raleigh.ibm.com/sales/salesconnect" /><!-- address of application host -->
 

  <!-- BROWSER START COMMAND
  The appropriate browser start commmand is formed from the browser_start_command string in format [browser_name]_[browser_version]_[browser_environment_os]. 
  All 3 parts are required.
  If using selenium grid(i.e. '<parameter name="server_is_grid_hub" value="true" />'), browser start command will be used to set capabilities. 
  You must request capabilities that match what is available on the grid. View grid capabilities at 'http://[server_host]:[server_port]/grid/'.
  If using -IBMtemplate argument with executable jar, desired browsers must be delimited by a semi-colon (e.g. 'GoogleChrome_9_Windows;Firefox_8_Windows').
  -->
  <parameter name="browser_start_command" value="ff_24_Windows" />
  
  <!--
  WAFFLE CONFIGURATION PARAMETERS
  Will be used in configuration of waffle. May also contain parameters used in configuration of test tool
  -->
  <parameter name="timeout_implicit_wait" value="60000" />
  <parameter name="timeout_explicit_wait" value="60000" />
  <parameter name="root_folder_name" value="SeleniumServer" />
 
<!-- SalesConnect specific parameters -->
  <parameter name="sugarurldb" value="jdbc:db2://svt3sugdb01.rtp.raleigh.ibm.com:50000/sugarcrm"/>
  <parameter name="testphase" value="nodbaccess" />

  <parameter name="cxnurl" value="https://w3-connections-beta.toronto.ca.ibm.com/" />
 
	<parameter name="apimanagement" value="https://w3-dev.api.ibm.com/sales/development/salesconnect/"/>
	<!--parameter name="apimanagement" value="https://w3-dev.api.ibm.com/sales/test/salesconnect/"/-->
		<!--parameter name="apimanagement" value="https://w3-dev.api.ibm.com/sales/development/scapisvt5/"/-->

	<parameter name="clientid" value="0960be8e-2128-4559-9f96-2744f7157fe1"/>
	<parameter name="clientsecret" value="wP2iX3aP8jO5gV7hR5oJ0nB4cP8cO3tJ1oJ3oT3mY1vB2nD7tA"/>
  
<!-- LISTENERS -->
  <listeners>
    <listener class-name="com.ibm.atmn.waffle.base.BaseExecutionListener" />
    <listener class-name="com.ibm.atmn.waffle.base.BaseTestListener" />
    <listener class-name="org.uncommons.reportng.HTMLReporter"/>
  </listeners>
  
  <!-- 
  TESTS
  Specify test structure below. A test is a collection of test classes. 
  Parameters for tests may be expected. <Test> parameters automatically override suite parameters of the same same.
  <Test> divisions are abritrary. @Test method locations for a <test> may be specified by <package> or <class>.
  -->

      <test name="API tests" preserve-order="true" enabled="true">
     	<classes>
      		<class name="com.ibm.salesconnect.test.api.tasks.Oauth"/>
      		<class name="com.ibm.salesconnect.test.api.tasks.DELETETask"/>
      		<class name="com.ibm.salesconnect.test.api.tasks.GETTask"/>
      		<class name="com.ibm.salesconnect.test.api.tasks.POSTtask"/>
      		<class name="com.ibm.salesconnect.test.api.tasks.POSTtaskbasic"/>
      		<class name="com.ibm.salesconnect.test.api.tasks.TaskAPImPlans"/>
      		<class name="com.ibm.salesconnect.test.api.tasks.TasksPlus"/>
      		<class name="com.ibm.salesconnect.test.api.tasks.UPDATETask"/>
      		<class name="com.ibm.salesconnect.test.api.opportunities.GetOpportunites"/>
     	</classes>
    </test>
    
    <test name="API tests" preserve-order="true" enabled="true">
        <parameter name="applicationName"  value="SC Auto tasksplus"/>
        <parameter name="api_extension"  value="tasksplus"/>
     	<classes>
      		<class name="com.ibm.salesconnect.test.api.tasks.POSTtaskbasic"/>
     	</classes>
    </test>

</suite>
